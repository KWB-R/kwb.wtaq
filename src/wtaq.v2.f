C
C      ********************************************************
C      *                                                      *
C      *                    **** WTAQ ****                    *
C      *                                                      *
C      *      COMPUTER PROGRAM FOR CALCULATING DRAWDOWN       *
C      *                                                      *
C      *      IN A CONFINED OR WATER-TABLE AQUIFER WITH       *
C      *                                                      *
C      *        AXIAL-SYMMETRIC FLOW TO A FINITE- OR          *
C      *                                                      *
C      *         INFINITESIMAL-DIAMETER PUMPED WELL           *
C      *                                                      *
C      *               VERSION 2.0,  04/11/2011               *
C      *                                                      *
C      ********************************************************
C
C
C      Although this program has been used by the U.S. Geological
C      Survey, no warranty, expressed or implied, is made by the 
C      USGS as to the accuracy and functioning of the program and
C      related program material, nor shall the fact of distribution
C      constitute any such warranty, and no responsibility is
C      assumed by the USGS in connection therewith
C
C---SPECIFICATIONS
C
C---THE PARAMETER STATEMENT BELOW SPECIFIES THE FOLLOWING PROGRAM
C   DIMENSIONS:
C    IMAXX1 = MAXIMUM NUMBER OF TIME-DRAWDOWN CURVES TO BE GENERATED
C             (THE FIRST CURVE IS ALWAYS THE PUMPED WELL, EVEN WHEN
C             CURVES ARE NOT CALCULATED AT THE PUMPED WELL).
C             IF IMAXX1 IS INCREASED, ADDITIONAL TEXT MUST BE ADDED
C             TO THE CHARACTER ARRAY 'WELLTXT'
C    IMAXX2 = MAXIMUM NUMBER OF USER SPECIFIED TIMES OR MEASURED 
C             DRAWDOWNS AT THE PUMPED WELL OR OBSERVATION WELLS
C
      PARAMETER (IMAXX1=25,IMAXX2=200)
C
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
C---WTAQ Version 2
       COMPLEX*16 FUN,D,WORK
       EXTERNAL FUN
       DIMENSION D(0:100),WORK(0:100)
C
      DIMENSION GAMMA(5)
      DIMENSION TDPLOT(IMAXX1,IMAXX2),HDPLOT(IMAXX1,IMAXX2)
      DIMENSION TIMEPW(IMAXX2),XMEASPW(IMAXX2),TIMEOB(IMAXX2),
     2 XMEASOB(IMAXX2)
      DIMENSION TDRDSQT(IMAXX2),TDRDSQTY(IMAXX2),HDTPLOT(IMAXX2),
     2 HDTYPLOT(IMAXX2)
C---WTAQ Version 2
      CHARACTER OBNAME*10
C
      CHARACTER STRING*80,WELLTXT(IMAXX1)*6
      DATA WELLTXT/'HDPW','HDOB1','HDOB2','HDOB3','HDOB4',
     2 'HDOB5','HDOB6','HDOB7','HDOB8','HDOB9','HDOB10','HDOB11',
     3 'HDOB12','HDOB13','HDOB14','HDOB15','HDOB16','HDOB17',
     4 'HDOB18','HDOB19','HDOB20','HDOB21','HDOB22','HDOB23',
     5 'HDOB24'/
C
C---COMMON STATEMENTS
      COMMON /IOUNIT/ IN,IO,IP,ILOG
C---WTAQ VERSION 2
      COMMON /PAR1/ IPWD,IRUN,IPWS,NOBWC,IOWS,IDPR,IPUMP
      COMMON /PAR2/ NGAMMA,IDRA,NS,KK,NMAX,NTMS,ISOLN,NNN,METHOD
      COMMON /PAR3/ IFORMAT,IAQ,NLC,NOX
      COMMON /PAR4/ ITS,IMEAS,NTSPW
      COMMON /PAR5/ BB,HKR,XKD,SS,SY,RW,QQ
      COMMON /PAR6/ BETAW,SIGMA,GAMMA
      COMMON /PAR7/ RERRNR,RERRSUM,ERROR,TDLAST,TLAST
      COMMON /PAR8/ R,ZP,Z1,Z2,WDP
      COMMON /PAR9/ V(20),XLN2,EXPMAX
      COMMON /PAR10/ RD,ZD,ZD1,ZD2
      COMMON /PAR11/ XLD,XDD,WD,SW
      COMMON /PAR12/ TIMEPW, XMEASPW
C---WTAQ VERSION 2
      COMMON /PAR13/ ADC,ADK,ADM,BETA,XMAXDM
      COMMON /PAR14/ TDPASS,F1
      COMMON /PAR15/ IFORMATPASS
C
C1--OPEN INPUT, RESULT, AND PLOT FILES
      CALL OFILE(IPLOT)
C
C2--READ AND PREPARE INPUT DATA
      CALL DATAPREP
C
C3--DEFINE SELECTED PROGRAM PARAMETERS
      PI=3.141592653589793D0
      IFORMATPASS=IFORMAT
      IF(IFORMAT.GE.1)THEN
       F1=(SS*RW*RW)/HKR
       F2=QQ/(4.0D0*PI*HKR*BB)
      ENDIF
C
C---EXPMAX IS THE MAXIMUM ALLOWABLE ABSOLUTE VALUE OF EXPONENTIAL ARGUMENTS
       EXPMAX=708.D0
C
C---WTAQ VERSION 2: NOTE THAT IF DE HOOG ALGORITHM IS USED, THEN NS IS 
C     ASSUMED TO EQUAL 0 BY THE CODE. THUS, FOR THEIS-SOLUTION 
C     CALCULATIONS WITH LTST1, NS = 0.  TO AVOID THIS, ADDED NEXT LINE:
       IF(ISOLN.EQ.2) NS=8
C
C4--CALL LINVST TO CALCULATE COEFFICIENTS USED FOR THE STEHFEST
C     ALGORITHM
       CALL LINVST(V,NS)
       XLN2=DLOG(2.D0)
C
C5--CALCULATE TIME-STEP PARAMETERS FOR LOG-CYCLE FORMATS
      IF(ITS.EQ.0)THEN
       NTS=NOX*NLC + 1
       DELTD=10.D0**(1.0D0/NOX)
      ENDIF
C
C6--CALCULATE REQUIRED NUMBER OF TIME-DRAWDOWN CURVES. ALWAYS
C    INCLUDE ONE CURVE FOR THE PUMPED WELL, EVEN IF RESULTS ARE
C    NOT PRINTED
      KKTOT=NOBWC+1
C
C
C7--MAIN CALCULATION LOOP:
C   CALCULATE TIME-DRAWDOWN CURVES FOR EACH WELL:
      DO 10 KK=1,KKTOT
C
C7a-CACULATE DIMENSIONLESS VARIABLES TO PASS TO LAPLACE TRANSFORM
C    SOLUTION SUBROUTINES 
C
C---IF KK=1, PUMPED-WELL CURVE
      IF(KK.EQ.1)THEN
C---WTAQ VERSION 2
       IF(IPUMP.EQ.0)THEN
        WRITE(IO,111)
        GOTO 10
       ENDIF
C
       IF(IRUN.EQ.0)GO TO 10
       IOWS=2
       RD=1.0D0
       RDSQ=RD*RD
C--WTAQ Version 2
       BETA=BETAW
       WRITE(ILOG,*)'PUMPED WELL'
C
       ZD=0.0D0
       WDP=0.0D0
C--WRITE HEADERS TO RESULT AND PLOT FILES FOR PUMPED-WELL RESULTS
       IF(IFORMAT.EQ.0)WRITE(IO,100)
       IF(IFORMAT.GE.1)THEN
        IF(IMEAS.EQ.0)WRITE(IO,101)
        IF(IMEAS.EQ.1)WRITE(IO,102)
       ENDIF
C
       IF(IPLOT.EQ.1)THEN
        IF(IFORMAT.GE.1)THEN
         IF(ITS.GT.0)THEN
          IF(IMEAS.EQ.0)THEN
           WRITE(IP,103)
           WRITE(IP,104)
          ENDIF
          IF(IMEAS.EQ.1)THEN
           WRITE(IP,103)
           WRITE(IP,105)
          ENDIF
         ENDIF
        ENDIF
       ENDIF
C
C---ELSE, OBSERVATION-WELL CURVE--READ INPUT DATA
      ELSE
       KI=KK-1
       IF(KI.EQ.1)WRITE(IO,106)
       READ(IN,'(A80)') STRING
       ILINE=16
C---WTAQ VERSION 2
       READ(STRING,*,ERR=1000) OBNAME, IOWS, IDPR
       WRITE(IO,112)OBNAME
C
       IF(IOWS.LT.0.OR.IOWS.GT.2)THEN
        WRITE(IO,107)
        STOP
       ENDIF
       IF(IDPR.LT.0.OR.IDPR.GT.1)THEN
        WRITE(IO,107)
        STOP
       ENDIF
C---WTAQ Version 2: This limitation was removed so that delayed response
C     at observation piezometers could be determined
C       IF(IDPR.EQ.1)THEN
C        IF(IOWS.EQ.2)THEN
C         WRITE(IO,107)
C         STOP
C        ENDIF
C       ENDIF
C
       READ(IN,'(A80)') STRING
       ILINE=17
       IF(IFORMAT.EQ.0)READ(STRING,*,ERR=1000) R, Z1, Z2, ZP, WDP
       IF(IFORMAT.GE.1)READ(STRING,*,ERR=1000) R, Z1, Z2, ZP, RP,
     2    XLL
C
       IF(R.LT.0.0D0.OR.ZP.LT.0.0D0)THEN
        WRITE(IO,108)
        STOP
       ENDIF
       IF(Z1.LT.0.0D0.OR.Z2.LT.0.0D0)THEN
        WRITE(IO,108)
        STOP
       ENDIF
C---Version 1.1: add tests for partially-penetrating wells:
      IF(IOWS.EQ.0)THEN
       IF(Z1.GE.Z2)THEN
        WRITE(IO,130)
        STOP
       ENDIF
       IF(Z1.GT.BB.OR.Z2.GT.BB)THEN
        WRITE(IO,131)
        STOP
       ENDIF
      ENDIF
C---Version 1.1: add test for observation piezometer:
      IF(IOWS.EQ.2)THEN
       IF(ZP.GT.BB)THEN
        WRITE(IO,132)
        STOP
       ENDIF
      ENDIF
C
       IF(WDP.LT.0.0D0.OR.RP.LT.0.0D0)THEN
        WRITE(IO,108)
        STOP
       ENDIF
       IF(XLL.LT.0.0D0)THEN
        WRITE(IO,108)
        STOP
       ENDIF
C
       RD=R/RW
       RDSQ=RD*RD
       BETA=BETAW*RDSQ
       WRITE(ILOG,*)
       WRITE(ILOG,*)'OBSERVATION WELL ',OBNAME
C
C---CALCULATE DIMENSIONLESS POSITION OF OBSERVATION WELL OR OBSERVATION
C    PIEZOMETER. NOTE SWITCH IN DEFINITION OF WELL-SCREEN POSITION FROM
C    WATER-TABLE REFERENCE TO BOTTOM-OF-AQUIFER REFERENCE
C
C---IF IOWS = 0, PARTIALLY PENETRATING OBSERVATION WELL
       IF(IOWS.EQ.0)THEN
        ZD=0.0D0
        ZD1=1.0D0 - (Z2/BB)
        ZD2=1.0D0 - (Z1/BB)
       ENDIF
C---IF IOWS = 1, FULLY PENETRATING OBSERVATION WELL
       IF(IOWS.EQ.1)THEN
C---Version 1.1: add additional test:
        IF(Z2.NE.BB)THEN
         WRITE(IO,133)
         STOP
        ENDIF
C
        BCALC=Z2-Z1
         IF(BCALC.NE.BB)THEN
          WRITE(IO,109)
          STOP
         ENDIF
        ZD=0.0D0
        ZD1=0.0D0
        ZD2=1.0D0
       ENDIF
C---IF IOWS = 2, OBSERVATION PIEZOMETER
       IF(IOWS.EQ.2)THEN
        ZD=1.0D0 - (ZP/BB)
        ZD1=0.0D0
        ZD2=0.0D0
       ENDIF
C
C---PARAMETERS FOR DELAYED PIEZOMETER RESPONSE
       IF(IDPR.EQ.0)WDP=0.0D0
       IF(IDPR.EQ.1)THEN
        IF(IFORMAT.GE.1)THEN
         XM=DSQRT(XKD)
         XX=XLL/(2.0D0*XM*RP)
         XXX=XX+DSQRT(1.0D0+XX*XX)
         FPRIME=XLL/DLOG(XXX)
         WDP=((RP/RW)**2)/(2.0D0*SS*FPRIME)
        ENDIF
       ENDIF
C
C---READ TIME-DRAWDOWN DATA
       IRUN=1
       IF(IFORMAT.GE.1)THEN
        IF(ITS.EQ.1)THEN
         READ(IN,'(A80)') STRING
         ILINE=18
         READ(STRING,*,ERR=1000) NTSOB, IRUN
         IF(NTSOB.LT.0)THEN
          WRITE(IO,110)
          STOP
         ENDIF
         IF(IRUN.LT.0.OR.IRUN.GT.1)THEN
          WRITE(IO,110)
          STOP
         ENDIF
         IF(NTSOB.EQ.0)THEN
          WRITE(IO,111)
          GOTO 10
         ENDIF
         IF(IMEAS.EQ.0)THEN
          DO 15 ID=1,NTSOB
           READ(IN,'(A80)') STRING
           ILINE=19
           READ(STRING,*,ERR=1000) TIMEOB(ID)
  15      CONTINUE
         ENDIF
         IF(IMEAS.EQ.1)THEN
          DO 20 ID=1,NTSOB
           READ(IN,'(A80)') STRING
           ILINE=19
           READ(STRING,*,ERR=1000) TIMEOB(ID),XMEASOB(ID)
  20      CONTINUE
         ENDIF
         DO 25 ID=1,NTSOB
          IF(TIMEOB(ID).LT.0.0D0)THEN
           WRITE(IO,110)
           STOP
          ENDIF
  25     CONTINUE
        ENDIF
       ENDIF
C
       IF(IRUN.EQ.0)THEN
        WRITE(IO,111)
        GOTO 10
       ENDIF
C
C---WRITE OBSERVATION-WELL INFORMATION TO RESULT AND PLOT FILES
       IF(IOWS.EQ.0)WRITE(IO,113)
       IF(IOWS.EQ.1)WRITE(IO,114)
       IF(IOWS.EQ.2)WRITE(IO,115)
       IF(IOWS.EQ.0.OR.IOWS.EQ.1)WRITE(IO,116)R,Z1,Z2,WDP
       IF(IOWS.EQ.2)WRITE(IO,117)R,ZP,WDP
       WRITE(IO,118)BETA
       IF(IFORMAT.EQ.0)WRITE(IO,100)
       IF(IFORMAT.GE.1)THEN
        IF(IMEAS.EQ.0)WRITE(IO,101)
        IF(IMEAS.EQ.1)WRITE(IO,102)
       ENDIF
C
       IF(IPLOT.EQ.1)THEN
        IF(IFORMAT.GE.1)THEN
         IF(ITS.GT.0)THEN
          IF(IMEAS.EQ.0)THEN
C---WTAQ VERSION 2
           WRITE(IP,112)OBNAME
           WRITE(IP,104)
          ENDIF
          IF(IMEAS.EQ.1)THEN
           WRITE(IP,112)OBNAME
           WRITE(IP,105)
          ENDIF
         ENDIF
        ENDIF
       ENDIF
C
C
C7a-FINISHED CALCULATING DIMENSIONLESS VARIABLES
      ENDIF
C
C7b-DEFINE DIMENSIONLESS TIME (TD) AND ITERATION VARIABLES
       IF(IFORMAT.EQ.0)TD=DELTD*TDLAST*RDSQ
       IF(IFORMAT.GE.1)RDSQ=1.0D0
       IF(IFORMAT.EQ.1)THEN
        IF(ITS.EQ.0)TD=TLAST*DELTD/F1
       ENDIF
C
C---IF USER-SPECIFIED TIMES ARE GIVEN, NTS IS THE NUMBER
C    OF SPECIFIED TIME STEPS
       IF(ITS.EQ.1)THEN
        IF(KK.EQ.1)NTS=NTSPW
        IF(KK.GT.1)NTS=NTSOB
       ENDIF
C
C7c-NOW, ENTER TIME-STEP LOOP
C
C---SET INITIAL VALUES OF SWITCHES FOR MINIMUM DRAWDOWN 
C   CALCULATIONS
       IHD=1
       IHDH=1
C---WTAQ VERSION 2: INIT SHOULD ALWAYS EQUAL 1.
       INIT=1
C
       DO 30 NT=1,NTS
        HD=0.0D0
C
C---DETERMINE DIMENSIONLESS TIME OF CURRENT TIME STEP.
C   DRAWDOWNS ARE CALCULATED FROM LARGEST TO SMALLEST TIME.
C   THUS, DIVIDE CURRENT TIME BY DELTD TO REDUCE TIME BY DELTD:
       IF(IFORMAT.EQ.0)TD=TD/DELTD
       IF(IFORMAT.GE.1)THEN
        IF(ITS.EQ.0)TD=TD/DELTD
        IF(ITS.EQ.1)THEN
         NTT=NTS-NT+1
         IF(KK.EQ.1)TD=TIMEPW(NTT)/F1
         IF(KK.GT.1)TD=TIMEOB(NTT)/F1
        ENDIF
       ENDIF
C
C---IF IHDH OR IHD HAVE BEEN SET TO 0, THEN PREVIOUS DRAWDOWN
C    WAS LESS THAN 1.0D-2; THUS, NO NEED TO CALCULATE DRAWDOWNS
C    FOR SMALLER TIMES (THAT IS, MINIMUM DRAWDOWN ALLOWED IS
C    1.0D-2)
C
C---IF CONFINED AQUIFER (IAQ=0), CALL LTST2
        IF(IAQ.EQ.0)THEN
         IF(IHDH.EQ.0)GOTO 35
         CALL LTST2(TD,HD)
         IF(DABS(HD).LT.1.0D-5)IHDH=0
        ENDIF
C
C---WTAQ VERSION 2
C    IF WATER-TABLE AQUIFER (IAQ=1), CALL EITHER STEHFEST 
C    ALGORITHM (ISOLN=1) OR DE HOOG ALGORITHM (ISOLN=2):
        IF(IAQ.EQ.1)THEN
C    CALL STEHFEST:
         IF(ISOLN.EQ.1)THEN
          IF(IHD.EQ.0)GOTO 35
          CALL LTST3(TD,HD)
          IF(DABS(HD).LT.1.0D-5)IHD=0
         ENDIF
C    ELSE, CALL LAPADC:
         IF(ISOLN.EQ.2)THEN
          BIGT=TD
          GAM=-DLOG(ERROR)/(2.D0*BIGT)
          TDPASS=TD
          CALL LAPADC(TD,GAM,BIGT,NNN,HD,FUN,METHOD,INIT,D,WORK)
         ENDIF
        ENDIF
C
  35    IF(HD.LT.1.D-05)HD=0.0D0
C
        IF(IFORMAT.EQ.0)THEN
         TDRDSQ=TD/RDSQ
         TDPLOT(KK,NT)=TDRDSQ
         HDPLOT(KK,NT)=HD
        ENDIF
C
        IF(IFORMAT.GE.1)THEN
         RTD=F1*TD
         RHD=F2*HD
         TDPLOT(KK,NT)=RTD
         HDPLOT(KK,NT)=RHD
        ENDIF
C
C---END TIME LOOP FOR DRAWDOWN CURVE
  30   CONTINUE
C
C7d-WRITE TIME-DRAWDOWN CALCULATIONS TO RESULT FILE AND, FOR
C   DIMENSIONAL DATA, TO PLOT FILE
       DO 40 NT=1,NTS
       NTT=NTS-NT+1
       IF(IFORMAT.EQ.0)WRITE(IO,119)TDPLOT(KK,NTT),HDPLOT(KK,NTT)
       IF(IFORMAT.GE.1)THEN
        IF(IMEAS.EQ.0)WRITE(IO,120)TDPLOT(KK,NTT),HDPLOT(KK,NTT)
        IF(IMEAS.EQ.1)THEN
         IF(KK.EQ.1)THEN
          IF(XMEASPW(NT).EQ.0.0D0)RELERR=0.0D0
          IF(XMEASPW(NT).GT.0.0D0)
     2     RELERR=100.0D0*(XMEASPW(NT)-HDPLOT(KK,NTT))/XMEASPW(NT)
          IF(XMEASPW(NT).EQ.0.0D0)WRITE(IO,128)TDPLOT(KK,NTT),
     2     XMEASPW(NT),HDPLOT(KK,NTT)
          IF(XMEASPW(NT).GT.0.0D0)WRITE(IO,121)TDPLOT(KK,NTT),
     2     XMEASPW(NT),HDPLOT(KK,NTT),RELERR
         ENDIF
         IF(KK.GT.1)THEN
          IF(XMEASOB(NT).EQ.0.0D0)RELERR=0.0D0
          IF(XMEASOB(NT).GT.0.0D0)
     2     RELERR=100.0D0*(XMEASOB(NT)-HDPLOT(KK,NTT))/XMEASOB(NT)
          IF(XMEASOB(NT).EQ.0.0D0)WRITE(IO,128)TDPLOT(KK,NTT),
     2     XMEASOB(NT),HDPLOT(KK,NTT)
          IF(XMEASOB(NT).GT.0.0D0)WRITE(IO,121)TDPLOT(KK,NTT),
     2     XMEASOB(NT),HDPLOT(KK,NTT),RELERR
         ENDIF
        ENDIF
       ENDIF
C
       IF(IPLOT.EQ.1)THEN
        IF(IFORMAT.GE.1)THEN
         IF(ITS.GT.0)THEN
          IF(IMEAS.EQ.0)THEN
           IF(KK.EQ.1)THEN
            WRITE(IP,122)TDPLOT(KK,NTT),HDPLOT(KK,NTT)
           ENDIF
           IF(KK.GT.1)THEN
            WRITE(IP,122)TDPLOT(KK,NTT),HDPLOT(KK,NTT)
           ENDIF
          ENDIF
          IF(IMEAS.EQ.1)THEN
           IF(KK.EQ.1)THEN
            IF(XMEASPW(NT).EQ.0.0D0)RELERR=0.0D0
            IF(XMEASPW(NT).GT.0.0D0)
     2       RELERR=100.0D0*(XMEASPW(NT)-HDPLOT(KK,NTT))/XMEASPW(NT)
            IF(XMEASPW(NT).EQ.0.0D0)WRITE(IP,129)TDPLOT(KK,NTT),
     2       XMEASPW(NT),HDPLOT(KK,NTT)
            IF(XMEASPW(NT).GT.0.0D0)WRITE(IP,123)TDPLOT(KK,NTT),
     2       XMEASPW(NT),HDPLOT(KK,NTT),RELERR
           ENDIF
           IF(KK.GT.1)THEN
            IF(XMEASOB(NT).EQ.0.0D0)RELERR=0.0D0
            IF(XMEASOB(NT).GT.0.0D0)
     2       RELERR=100.0D0*(XMEASOB(NT)-HDPLOT(KK,NTT))/XMEASOB(NT)
            IF(XMEASOB(NT).EQ.0.0D0)WRITE(IP,129)TDPLOT(KK,NTT),
     2       XMEASOB(NT),HDPLOT(KK,NTT)
            IF(XMEASOB(NT).GT.0.0D0)WRITE(IP,123)TDPLOT(KK,NTT),
     2       XMEASOB(NT),HDPLOT(KK,NTT),RELERR
           ENDIF
          ENDIF
         ENDIF
        ENDIF
       ENDIF
C
C 
  40  CONTINUE
C
C7--FINISHED WITH CURVE KK, CONTINUE TO NEXT CURVE
  10  CONTINUE
C
C8--CALCULATE THEIS DRAWDOWNS FOR DIMENSIONLESS CURVES AND
C   WRITE ALL TIME-DRAWDOWN CALCULATIONS TO PLOT FILE FOR
C   TYPE-CURVE FORMATS (INCLUDING DIMENSIONAL)
      IF(IPLOT.EQ.1)THEN
       IF(IFORMAT.EQ.0)THEN
        TD=DELTD*TDLAST*RDSQ
        IF(IAQ.EQ.0)THEN
         TDY=TD
        ELSE
         TDY=TD*SIGMA
        ENDIF
C
C8a-CALCULATE THEIS DRAWDOWNS
        DO 45 NT=1,NTS
         HDT=0.0D0
         HDTY=0.0D0
         TD=TD/DELTD
         TDY=TDY/DELTD
C
         IF(TD.GE.1.0D-03) CALL LTST1(TD,HDT)
         IF(HDT.LT.1.0D-03) HDT=0.0D0
         IF(TDY.GE.1.0D-03) CALL LTST1(TDY,HDTY)
         IF(HDTY.LT.1.0D-03) HDTY=0.0D0
C
         TDRDSQT(NT)=TD/RDSQ
         TDRDSQTY(NT)=TDY/RDSQ
         HDTPLOT(NT)=HDT
         HDTYPLOT(NT)=HDTY
  45    CONTINUE
C
C8b-WRITE DIMENSIONLESS TIME-DRAWDOWN CALCULATIONS TO PLOT FILE
        NSTRIP=(NOBWC/5) + 1
        KK1=1
        KK2=5
        IF(KK2.GT.KKTOT) KK2=KKTOT
        DO 50 I=1,NSTRIP
         WRITE(IP,124)(WELLTXT(J),J=KK1,KK2)
        DO 55 NT=1,NTS
         NTT=NTS-NT+1
         WRITE(IP,125)TDRDSQT(NTT),HDTPLOT(NTT),
     2   TDRDSQTY(NTT),HDTYPLOT(NTT), (HDPLOT(K,NTT),K=KK1,KK2)
  55    CONTINUE
C
        KK1=KK1+5
        KK2=KK2+5
        IF(KK2.GT.KKTOT) KK2=KKTOT
  50    CONTINUE
C
       ENDIF
C
C8c-WRITE DIMENSIONAL TIME-DRAWDOWN CALCULATIONS TO PLOT FILE
       IF(IFORMAT.EQ.1)THEN
        IF(ITS.EQ.0)THEN
         NSTRIP=(NOBWC/5) + 1
         KK1=1
         KK2=5
         IF(KK2.GT.KKTOT) KK2=KKTOT
         DO 60 I=1,NSTRIP
          WRITE(IP,126)(WELLTXT(J),J=KK1,KK2)
         DO 65 NT=1,NTS
          NTT=NTS-NT+1
          WRITE(IP,127)TDPLOT(1,NTT),(HDPLOT(K,NTT),K=KK1,KK2)
  65     CONTINUE
C
         KK1=KK1+5
         KK2=KK2+5
         IF(KK2.GT.KKTOT) KK2=KKTOT
  60     CONTINUE
C
        ENDIF
       ENDIF
C
      ENDIF
C
C8--FINISHED CALCULATING THEIS DRAWDOWNS AND WRITING TO PLOT FILE
C
C9--DEFINE WARNINGS IN WTAQ.LOG FILE
      WRITE(ILOG,134)
      WRITE(ILOG,135)
C9--END
C---FORMAT STATEMENTS
  100 FORMAT(/,3X,'DIMENSIONLESS TIME   DIMENSIONLESS DRAWDOWN',
     2/,7X,'(TDRDSQ)',18X,'(HD)',/,3X,'------------------',
     3'   ----------------------')
  101 FORMAT(/,17X,'CALCULATED',/,6X,'TIME        DRAWDOWN',
     2/,6X,'----       ----------')
  102 FORMAT(/,48X,'RELATIVE',/,18X,'MEASURED',6X,'CALCULATED',7X,
     2'ERROR',/,6X,'TIME        DRAWDOWN       DRAWDOWN     ',
     3'  (PERCENT)'/,6X,'----       ----------     ----------    ',
     4' ---------- ')
  103 FORMAT(/,/,9X,'****   PUMPED WELL   ****')
  104 FORMAT(/,5X,'TIME           CALCDD')
  105 FORMAT(/,5X,'TIME          MEASDD         CALCDD         ',
     2'RELERR')
  106 FORMAT(/,/,/,1X,'*** OBSERVATION-WELL CHARACTERISTICS AND',
     2' CALCULATED DRAWDOWN ***',/)
  107 FORMAT(/,3X,'EITHER IOWS OR IDPR IS INCORRECT.  PROGRAM STOPPED.')
  108 FORMAT(/,3X,'AN OBSERVATION-WELL VARIABLE (R, Z1, Z2, ZP, WDP,',
     2' RP, OR XLL) IS LESS',/,3X,'THAN ZERO.  PROGRAM STOPPED.')
  109 FORMAT(/,2X,'Z2(I)-Z1(I) DOES NOT EQUAL SATURATED',
     2' THICKNESS SPECIFIED FOR AQUIFER.',/,2X,'MODIFY Z2(I),',
     3' Z1(I), OR BB. PROGRAM STOPPED.')
  110 FORMAT(/,3X,'INFORMATION ON OBSERVATION-WELL TIME-DRAWDOWN DATA',
     2' (NTSOB, IRUN,',/,3X,'OR TIMEOB(I)) IS NOT CORRECT.  PROGRAM',
     3' STOPPED.')
  111 FORMAT(/,/,13X,'****   DRAWDOWN NOT CALCULATED   ****')
c      FORMAT(/,/,9X,'****   OBSERVATION WELL OR PIEZOMETER',I3,
c     2 2X,'****')
  112 FORMAT(/,/,9X,'       OBSERVATION WELL OR PIEZOMETER: ',A10)
  113 FORMAT(/,/,3X,'PARTIALLY PENETRATING OBSERVATION WELL')
  114 FORMAT(/,/,3X,'FULLY PENETRATING OBSERVATION WELL')
  115 FORMAT(/,/,3X,'OBSERVATION PIEZOMETER')
  116 FORMAT(/,/,3X,'DISTANCE FROM',/,5X,'CENTER OF',29X,
     2 'DELAYED RESPONSE',/,4X,'PUMPED WELL',10X,'Z1',10X,'Z2',
     3 9X,'FACTOR',/,3X,'---------------------',
     4 '-----------------------------------',/,5X,D9.3,7X,D9.3,
     5 3X,D9.3,4X,D9.3)
  117 FORMAT(/,/,3X,'DISTANCE FROM',/,5X,'CENTER OF',16X,
     2 'DELAYED RESPONSE',/,4X,'PUMPED WELL',8X,'ZP',10X,'FACTOR',/,
     3 3X,'-------------------------------------------',/,5X,D9.3,
     4 5X,D9.3,5X,D9.3)
  118 FORMAT(/,/,3X,'DRAWDOWN CALCULATED FOR BETA = ',D12.3)
  119 FORMAT(5X,D11.4,12X,D11.4)
  120 FORMAT(1X,D11.4,4X,D11.4)
  121 FORMAT(1X,D11.4,4X,D11.4,4X,D11.4,4X,D11.4)
  122 FORMAT(1X,E11.4,4X,E11.4)
  123 FORMAT(1X,E11.4,4X,E11.4,4X,E11.4,4X,E11.4)
  124 FORMAT(/,'    TDRDSQ     HDT     TDYRDSQ     HDTY',2X,
     2 5(4X,A6))
  125 FORMAT(1X,9(1X,E9.3))
  126 FORMAT(/,'    TIME',2X,5(4X,A6))
  127 FORMAT(1X,6(1X,E9.3))
  128 FORMAT(1X,D11.4,4X,D11.4,4X,D11.4,8X,'****')
  129 FORMAT(1X,E11.4,4X,E11.4,4X,E11.4,8X,'****')
C---Version 1.1: add FORMAT statements:
  130 FORMAT(/,/,3X,'SPECIFIED TOP OF SCREENED INTERVAL OF',
     2' OBSERVATION WELL (Z1) IS BELOW BOTTOM',/,5X,' OF',
     3' SCREENED INTERVAL (Z2). PROGRAM STOPPED.')
  131 FORMAT(/,/,3X,'SPECIFIED VALUE OF TOP (Z1) OR BOTTOM (Z2)',
     2' OF SCREENED INTERVAL OF OBSERVATION WELL IS',/,5X,
     3' GREATER THAN SPECIFIED THICKNESS OF AQUIFER (BB).',
     4' PROGRAM STOPPED.')
  132 FORMAT(/,/,3X,'SPECIFIED VALUE OF PIEZOMETER LOCATION (ZP)',
     2' IS GREATER THAN SPECIFIED THICKNESS OF AQUIFER (BB).',/,5X,
     3' PROGRAM STOPPED.')
  133 FORMAT(/,/,3X,'SPECIFIED VALUE OF BOTTOM OF SCREENED',
     2' INTERVAL OF OBSERVATION WELL (Z2) DOES NOT EQUAL',/,5x,
     3' THICKNESS OF AQUIFER (BB). Z1 SHOULD EQUAL 0.0 AND Z2',
     4' SHOULD EQUAL BB FOR A FULLY PENETRATING WELL.',/,5X,
     5' PROGRAM STOPPED.')
  134 FORMAT(/,/,'----------------------------------------',
     2'--------------------------------',/,
     3'DESCRIPTION OF WARNING MESSAGES:')
  135 FORMAT(/,' ERROR MESSAGES OF THE TYPE IERRx INDICATE A',
     2' PROBLEM WITH THE CALLS TO',/,'  THE BESSEL FUNCTIONS',
     3' IN EQUATIONS 37 OR 42 OF MATHIAS AND ',/,
     4'  BUTLER (2006):',/,
     4'   IERR1 REFERS TO Ju(0)',/,
     5'   IERR2 REFERS TO Jv(0)',/,
     6'   IERR3 REFERS TO Ju(m)',/,
     7'   IERR4 REFERS TO Yu(0)',/,
     8'   IERR5 REFERS TO Yv(0)',/,
     9'   IERR6 REFERS TO Yu(m)',/)
C
C9--CLOSE INPUT/RESULT/PLOT FILES, STOP, AND END
      CLOSE(UNIT=IN)
      CLOSE(UNIT=IO)
      IF(IPLOT.EQ.1)CLOSE(UNIT=IP)
      CLOSE(UNIT=ILOG)
      STOP
 1000 CALL RDERR(IO,STRING,ILINE)
      END